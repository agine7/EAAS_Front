{"ast":null,"code":"var _jsxFileName = \"/Users/albertgine/Desktop/TFG/eaas_front-master/src/components/NewTaskForm/FileForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Typography from \"@mui/material/Typography\";\nimport Button from '@mui/material/Button';\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Grid from '@mui/material/Grid';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CardContent from \"@mui/material/CardContent\";\nimport Card from \"@mui/material/Card\";\nimport store from \"../../../store\";\nimport { MODEL_FILE_ADDED, MODEL_FILE_REMOVED } from \"../../../constants/actionTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FileForm = () => {\n  _s();\n\n  const [files, setFile] = useState(store.getState().modelfiles);\n  const MAX_ALLOWED_FILE = 10;\n\n  async function uploadSingleFile(e) {\n    const reader = new FileReader();\n\n    reader.onload = async x => {\n      const text = x.target.result;\n      store.dispatch({\n        type: MODEL_FILE_ADDED,\n        payload: {\n          name: x.target.fileName,\n          contents: text\n        }\n      });\n      setFile([...files, {\n        name: x.target.fileName,\n        contents: text\n      }]);\n    };\n\n    reader.fileName = e.target.files[0].name;\n    reader.readAsText(e.target.files[0]);\n  }\n\n  function deleteFile(e) {\n    store.dispatch({\n      type: MODEL_FILE_REMOVED,\n      payload: {\n        index: e\n      }\n    });\n    const s = files.filter((item, index) => index !== e);\n    setFile(s);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-CenteredContainer2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: 'none'\n        },\n        id: \"raised-button-file\",\n        type: \"file\",\n        disabled: files.length >= MAX_ALLOWED_FILE,\n        multiple: true,\n        onChange: uploadSingleFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"raised-button-file\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: 10\n          },\n          variant: \"outlined\",\n          component: \"span\",\n          endIcon: /*#__PURE__*/_jsxDEV(FileUploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 62\n          }, this),\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        id: \"App-FileUploadContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 4,\n            mb: 2,\n            width: \"100%\",\n            maxWidth: \"100%\"\n          },\n          variant: \"h6\",\n          component: \"div\",\n          children: [\"Currently selected files: \", files.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          children: files.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              width: '100%',\n              height: '10%'\n            },\n            className: \"App-FileUploadCard\",\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"delete\",\n                  onClick: () => deleteFile(index),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 45\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: /*#__PURE__*/_jsxDEV(FolderIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FileForm, \"PNg2cgfmR9ZKlvi5CoiCSmc2zG0=\");\n\n_c = FileForm;\nexport default FileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileForm\");","map":{"version":3,"sources":["/Users/albertgine/Desktop/TFG/eaas_front-master/src/components/NewTaskForm/FileForm/index.js"],"names":["React","useState","Typography","Button","FileUploadIcon","List","ListItem","ListItemAvatar","ListItemText","Avatar","IconButton","Grid","FolderIcon","DeleteIcon","CardContent","Card","store","MODEL_FILE_ADDED","MODEL_FILE_REMOVED","FileForm","files","setFile","getState","modelfiles","MAX_ALLOWED_FILE","uploadSingleFile","e","reader","FileReader","onload","x","text","target","result","dispatch","type","payload","name","fileName","contents","readAsText","deleteFile","index","s","filter","item","display","length","margin","mt","mb","width","maxWidth","map","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Typography from \"@mui/material/Typography\";\nimport Button from '@mui/material/Button';\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Grid from '@mui/material/Grid';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CardContent from \"@mui/material/CardContent\";\nimport Card from \"@mui/material/Card\";\nimport store from \"../../../store\";\nimport {MODEL_FILE_ADDED, MODEL_FILE_REMOVED} from \"../../../constants/actionTypes\";\n\nconst FileForm = () => {\n    const [files, setFile] = useState(store.getState().modelfiles);\n    const MAX_ALLOWED_FILE = 10;\n\n    async function uploadSingleFile(e) {\n        const reader = new FileReader();\n        reader.onload = async (x) => {\n            const text = (x.target.result);\n            store.dispatch({\n               type: MODEL_FILE_ADDED,\n               payload: {\n                   name: x.target.fileName,\n                   contents: text\n               }\n            });\n            setFile([\n                ...files,\n                {\n                    name: x.target.fileName,\n                    contents: text\n                }\n            ]);\n        };\n\n        reader.fileName = e.target.files[0].name;\n        reader.readAsText(e.target.files[0]);\n    }\n\n    function deleteFile(e) {\n        store.dispatch({\n            type: MODEL_FILE_REMOVED,\n            payload: {\n                index: e\n            }\n        });\n        const s = files.filter((item, index) => index !== e);\n        setFile(s);\n    }\n\n    return (\n        <>\n            <div className=\"App-CenteredContainer2\">\n            <input\n                style={{ display: 'none' }}\n                id=\"raised-button-file\"\n                type=\"file\"\n                disabled={files.length >= MAX_ALLOWED_FILE}\n                multiple\n                onChange={uploadSingleFile}\n            />\n            <label htmlFor=\"raised-button-file\">\n                <Button style={{margin: 10}}\n                variant=\"outlined\" component=\"span\" endIcon={<FileUploadIcon/> }>\n                    Upload\n                </Button>\n            </label>\n\n            <Grid item xs={12} md={6} id=\"App-FileUploadContainer\">\n                <Typography sx={{ mt: 4, mb: 2, width: \"100%\", maxWidth: \"100%\" }} variant=\"h6\" component=\"div\">\n                    Currently selected files: {files.length}\n                </Typography>\n                    <List dense={true}>\n                        {files.map((item, index) => (\n                            <Card sx={{ width: '100%', height: '10%' }} className=\"App-FileUploadCard\" key={index} >\n                                <CardContent className=\"\">\n                                    <ListItem\n                                        secondaryAction={\n                                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteFile(index)}>\n                                                <DeleteIcon/>\n                                            </IconButton>\n                                        }\n                                    >\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <FolderIcon />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={item.name}\n                                        />\n                                    </ListItem>\n                                </CardContent>\n                            </Card>\n                        ))}\n                    </List>\n            </Grid>\n\n            <br/>\n            </div>\n        </>\n    );\n};\n\nexport default FileForm;\n\n"]},"metadata":{},"sourceType":"module"}
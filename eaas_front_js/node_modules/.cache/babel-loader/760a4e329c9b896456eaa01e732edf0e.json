{"ast":null,"code":"var _jsxFileName = \"/Users/albertgine/Desktop/EAAS/eaas_front-master/src/components/NewTaskForm/index.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\nimport Card from '@mui/material/Card';\nimport FileForm from \"./FileForm\";\nimport store from '../../store';\nimport ProblemCharacteristics from \"../ProblemCharacteristics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Upload files', 'Select the solver', 'Upload the file', 'Upload the configuration file'];\nexport default function NewTaskForm() {\n  _s();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const isStepOptional = step => {\n    return step === 4;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    console.log(store.getState());\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  function _renderStepContent(step) {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(FileForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(ProblemCharacteristics, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return \"Not Found\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-CenteredContainer\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: '80%'\n      },\n      className: \"App-Card\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: activeStep,\n          children: steps.map((label, index) => {\n            const stepProps = {};\n            const labelProps = {};\n\n            if (isStepOptional(index)) {\n              labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                children: \"Optional\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this);\n            }\n\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n\n            return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n              children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this)\n            }, label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'row',\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: '1 1 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleReset,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [_renderStepContent(activeStep), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'row',\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              sx: {\n                mr: 1\n              },\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: '1 1 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              onClick: handleSkip,\n              sx: {\n                mr: 1\n              },\n              children: \"Skip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleNext,\n              children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewTaskForm, \"JuSWJLI0nqo1O5LgEQqaFwB8IYc=\");\n\n_c = NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"sources":["/Users/albertgine/Desktop/EAAS/eaas_front-master/src/components/NewTaskForm/index.js"],"names":["React","Box","Stepper","Step","StepLabel","Button","Typography","CardContent","Card","FileForm","store","ProblemCharacteristics","steps","NewTaskForm","activeStep","setActiveStep","useState","skipped","setSkipped","Set","isStepOptional","step","isStepSkipped","has","handleNext","console","log","getState","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","_renderStepContent","width","map","label","index","stepProps","labelProps","optional","completed","length","display","flexDirection","pt","flex","mr"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/CardContent';\nimport Card from '@mui/material/Card';\nimport FileForm from \"./FileForm\";\nimport store from '../../store';\nimport ProblemCharacteristics from \"../ProblemCharacteristics\";\n\n\nconst steps = ['Upload files', 'Select the solver', 'Upload the file', 'Upload the configuration file'];\n\nexport default function NewTaskForm() {\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n\n    const isStepOptional = (step) => {\n        return step === 4;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        console.log(store.getState());\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    function _renderStepContent(step) {\n        switch (step) {\n            case 0:\n                return <FileForm/>;\n            case 1:\n                return <ProblemCharacteristics/>;\n            default:\n                return \"Not Found\";\n        }\n    }\n\n    return (\n        <div className=\"App-CenteredContainer\">\n        <Card sx={{ width: '80%' }} className=\"App-Card\" >\n        <CardContent className=\"\">\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (isStepOptional(index)) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">Optional</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === steps.length ? (\n                <React.Fragment>\n                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                        <Box sx={{ flex: '1 1 auto' }} />\n                        <Button onClick={handleReset}>Reset</Button>\n                    </Box>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    {_renderStepContent(activeStep)}\n                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                        <Button\n                            color=\"inherit\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            sx={{ mr: 1 }}\n                        >\n                            Back\n                        </Button>\n                        <Box sx={{ flex: '1 1 auto' }} />\n                        {isStepOptional(activeStep) && (\n                            <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                                Skip\n                            </Button>\n                        )}\n                        <Button onClick={handleNext}>\n                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                        </Button>\n                    </Box>\n                </React.Fragment>\n            )}\n        </CardContent>\n        </Card>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\nimport createRootReducer from './reducer';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nexport const history = createBrowserHistory();\nconst myRouterMiddleware = routerMiddleware(history);\n\nconst getMiddleware = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware);\n  } else {\n    // Enable additional logging in non-production environments.\n    return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware, createLogger());\n  }\n};\n\nconst store = createStore(createRootReducer(history), composeWithDevTools(getMiddleware()));\nexport default store;","map":{"version":3,"sources":["/Users/albertgine/Desktop/TFG/eaas_front-master/src/store.js"],"names":["applyMiddleware","createStore","createLogger","composeWithDevTools","promiseMiddleware","localStorageMiddleware","createRootReducer","routerMiddleware","createBrowserHistory","history","myRouterMiddleware","getMiddleware","process","env","NODE_ENV","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,SAASC,iBAAT,EAA4BC,sBAA5B,QAA0D,cAA1D;AACA,OAAOC,iBAAP,MAA8B,WAA9B;AAEA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,oBAAT,QAAoC,SAApC;AAEA,OAAO,MAAMC,OAAO,GAAGD,oBAAoB,EAApC;AACP,MAAME,kBAAkB,GAAGH,gBAAgB,CAACE,OAAD,CAA3C;;AAEA,MAAME,aAAa,GAAG,MAAM;AACxB,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC,WAAOd,eAAe,CAACU,kBAAD,EAAqBN,iBAArB,EAAwCC,sBAAxC,CAAtB;AACH,GAFD,MAEO;AACH;AACA,WAAOL,eAAe,CAACU,kBAAD,EAAqBN,iBAArB,EAAwCC,sBAAxC,EAAgEH,YAAY,EAA5E,CAAtB;AACH;AACJ,CAPD;;AASA,MAAMa,KAAK,GAAGd,WAAW,CACrBK,iBAAiB,CAACG,OAAD,CADI,EACON,mBAAmB,CAACQ,aAAa,EAAd,CAD1B,CAAzB;AAGA,eAAeI,KAAf","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\nimport createRootReducer from './reducer';\n\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory} from 'history';\n\nexport const history = createBrowserHistory();\nconst myRouterMiddleware = routerMiddleware(history);\n\nconst getMiddleware = () => {\n    if (process.env.NODE_ENV === 'production') {\n        return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware);\n    } else {\n        // Enable additional logging in non-production environments.\n        return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware, createLogger())\n    }\n};\n\nconst store = createStore(\n    createRootReducer(history), composeWithDevTools(getMiddleware()));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
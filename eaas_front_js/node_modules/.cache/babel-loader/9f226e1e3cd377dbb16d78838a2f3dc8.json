{"ast":null,"code":"/*\nimport superagentPromise from 'superagent-promise';\nimport _superagent from 'superagent';\n\nconst superagent = superagentPromise(_superagent, global.Promise);\n\nconst API_ROOT = process.env.REACT_APP_BACKEND_URL || '127.0.0.1:3200';\n\nconst responseBody = res => res.body;\n\nlet token = null;\nconst tokenPlugin = req => {\n    if (token) {\n        req.set('authorization', `Token ${token}`);\n    }\n};\n\nconst requests = {\n    del: url =>\n        superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n    get: url =>\n        superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n    put: (url, body) =>\n        superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\n    post: (url, body) =>\n        superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody)\n};\n\nexport default {\n    setToken: _token => { token = _token; }\n};\n*/","map":{"version":3,"sources":["/Users/albertgine/Desktop/eaas_front-master/src/agent.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*\nimport superagentPromise from 'superagent-promise';\nimport _superagent from 'superagent';\n\nconst superagent = superagentPromise(_superagent, global.Promise);\n\nconst API_ROOT = process.env.REACT_APP_BACKEND_URL || '127.0.0.1:3200';\n\nconst responseBody = res => res.body;\n\nlet token = null;\nconst tokenPlugin = req => {\n    if (token) {\n        req.set('authorization', `Token ${token}`);\n    }\n};\n\nconst requests = {\n    del: url =>\n        superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n    get: url =>\n        superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n    put: (url, body) =>\n        superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\n    post: (url, body) =>\n        superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody)\n};\n\nexport default {\n    setToken: _token => { token = _token; }\n};\n*/\n"]},"metadata":{},"sourceType":"module"}